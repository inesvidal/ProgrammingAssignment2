install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
install.packages("swirl")
library("swirl")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
z
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+100
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir<-getwd()
dir.create(testdir)
args(dir.create)
c(getwd(),testdir
)
c(getwd(),"testdir")
dir.create(/Users/inesv/testdir)
dir.create("/Users/inesv/testdir")
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R)")
file.create("mytest.R")
dir()
file.remove("mytest.R)")
dir()
ls()
list.files()
list.files()
?file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.info("mytest.R")$mode
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R" "mytest3.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
info(file.path)
?file.path
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path(getwd(), "testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3", recursive = TRUE))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink("testdir2/", recursive=TRUE)
unlink("testdir2", recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
swirl()
library("swirl")
swirl()
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
seq(0, 10, length=30)
seq(5, 10, length=30)
my_seq=seq(5, 10, length=30)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
play()
?seq
back()
nxt(
)
seq(along.with =my_seq)
seq_along(my_seq)
rep(0,times=40)
re0(c(0,1,2), time 10)
re0(c(0,1,2), times=10)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
x<-c(44, NA, 5, NA)
3*x
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo =11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11, 2, NA)
vect2
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
rm(list=rm())
wdget()
getwd()
setwd("/Users/inesv/Coursera/2-R/W2")
setwd("/Users/inesv/Coursera/2-R/W2/w2")
source("corr.R")
cr <- corr("specdata", 150)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")รง
setwd("/Users/inesv/Coursera/2-R/W2")
setwd("/Users/inesv/Coursera/2-R/W2/w2")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
head(cr)
summary(cr)
submit()
source("corr.R")
submit()
source("corr.R")
submit()
ls
ls()
dir()
? sort
?set.seed()
?vector
?corr
?cor
source('~/Coursera/2-R/W2/w2/corr.R')
source('~/Coursera/2-R/W2/w2/corr.R')
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
n
debugSource('~/Coursera/2-R/W2/w2/corr.R')
cr <- corr("specdata", 150)
debugSource('~/Coursera/2-R/W2/w2/corr.R')
cr <- corr("specdata", 150)
View(nobs_th)
View(nobs_th)
?vector
debugSource('~/Coursera/2-R/W2/w2/corr.R')
cr <- corr("specdata", 150)
?cor
debugSource('~/Coursera/2-R/W2/w2/corr.R')
cr <- corr("specdata", 150)
debugSource('~/Coursera/2-R/W2/w2/corr.R')
cr <- corr("specdata", 150)
head(cr)
head(cr)
summary(cr)
source('~/Coursera/2-R/W2/w2/corr.R')
summary(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
submit()
submit()
submit()
m<-0
if(!is.null(m))
print(getting cached data)
if(!is.null(m))
print("getting cached data")
if(!is.null(m)) {
print("getting cached data")
} else{
print("calculating mean")}
m=1
if(!is.null(m)) {
print("getting cached data")
} else{
print("calculating mean")}
m<-1
if(!is.null(m)) {
print("getting cached data")
} else{
print("calculating mean")}
m<-NULL
if(!is.null(m)) {
print("getting cached data")
} else{
print("calculating mean")}
setwd("~/Coursera/2-R/W3/ProgrammingAssignment2")
setwd(/Users/inesv/)
?matrix
source('~/Coursera/2-R/W3/ProgrammingAssignment2/cachematrix.R')
debugSource('~/Coursera/2-R/W3/ProgrammingAssignment2/test_matrix.R')
matriz <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
matriz
solve(matriz)
inversa <- cacheSolve(matriz)
matriz_especial<-makeCacheMatrix(matriz)
matriz_especial
inversa <- cacheSolve(matriz_especial)
inversa
inversa
inversa <- cacheSolve(matriz_especial)
inversa <- cacheSolve(matriz_especial)
matriz <- matrix(c(2,2,2,2), nrow = 2, ncol = 2)
matriz_especial<-makeCacheMatrix(matriz)
matriz_especial
inversa <- cacheSolve(matriz_especial)
solve(matriz)
matriz <- matrix(c(2,3,4,5), nrow = 2, ncol = 2)
solve(matriz)
matriz_especial<-makeCacheMatrix(matriz)
inversa <- cacheSolve(matriz_especial)
inversa <- cacheSolve(matriz_especial)
matriz_especial<-makeCacheMatrix(matriz)
inversa
